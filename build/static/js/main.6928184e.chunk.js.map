{"version":3,"sources":["services/firebase.js","screens/JumpshotTutor.js","components/TrainerSelect.js","services/db-call.js","components/Input.js","screens/LoginScreen.js","components/TrainerList.js","old-files/TestWrite.js","old-files/TrainerScreen.js","screens/HomeScreen.js","components/ModNameSelect.js","screens/OrderScreen.js","components/PrivateRoute.js","components/PublicRoute.js","screens/LivestreamScreen.js","screens/ModuleScreen.js","screens/ChallengeOfTheWeek.js","screens/TutorialsScreen.js","screens/SuccessUpload.js","components/LevelSelect.js","components/ModuleInput.js","components/DisplayEntireModule.js","screens/EditScreen.js","App.js","index.js","components/Button.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","JumpshotTutorScreen","useState","trainers","setTrainers","db","firestore","allTrainers","isLoading","setIsLoading","history","collection","where","get","then","querySnapshot","forEach","doc","trainerObj","value","id","label","data","_name","firstName","lastName","profilePic","_profilePic","push","useHistory","className","onClick","e","preventDefault","module","jumpshotTutorObject","name","length","set","console","log","alert","TrainerSelect","props","options","customStyles","option","provided","state","borderBottom","color","isSelected","padding","control","width","singleValue","opacity","isDisabled","transition","isMulti","onChange","classNamePrefix","styles","signInUser","email","password","a","userInfo","auth","signInWithEmailAndPassword","catch","error","code","userIsSignedIn","currentUser","Input","styled","input","inputColor","height","LoginScreen","setEmail","setPassword","userInvalidMessage","setUserInvalidMessage","err","text","target","placeholder","required","type","Button","handleClick","TrainerList","React","useEffect","i","trainer","map","key","TestWrite","enteredData","setEnteredData","onSubmit","handleSubmit","handleDataChange","TrainerScreen","HomeScreen","nextPage","setNextPage","signOut","ModNameSelect","allModules","align","setModule","OrderScreen","modNameObj","allPlayerModules","setModNamesIsLoading","allCoachModules","moduleFor","setModuleFor","setOrderingPlayers","setOrderingCoaches","chooseUserType","toString","PrivateRoute","Component","component","rest","render","to","PublicRoute","restricted","LivestreamScreen","s3","accessKeyId","secretAccessKey","date","setDate","link","setLink","setName","isUploaded","setIsUploaded","AWS","require","sh","getKeys","functions","httpsCallable","result","ModuleScreen","modName","setModName","modNameIsSubmitted","setModNameIsSubmitted","videoNum","setVideoNum","videoName","setVideoName","inputKey","videoLink","setVideoLink","levelTitle","setLevelTitle","description","setDescription","guidelines","setGuidelines","videoUploadInProgress","setVideoUploadInProgress","clearVideoInfo","fileName","replace","video","Video","getMetadata","metadata","videoParams","Bucket","Key","Body","ContentType","S3","upload","info","level","drill","source","Location","duration","unique","videos","title","files","handleVideoChange","accept","processVideoInfo","disabled","userType","ChallengeScreen","challenge","setChallenge","TutorialsScreen","href","SuccessfulUploadScreen","goHome","setGoHome","LevelSelect","allLevels","moduleLevel","setModuleLevel","ModuleInput","setValue","DisplayEntireModule","propsVids","vids","htmlFor","confirm","splice","removeDrill","event","FormData","levels","propsVid","vid","vidObj","update","isModuleLoading","setIsModuleLoading","editModuleObj","setEditModuleObj","trainersIsLoading","setTrainersIsLoading","modNamesIsLoading","modLevelsIsLoading","setModLevelsIsLoading","actionChosen","setActionChosen","changeName","setChangeName","changeTrainersNeeded","setChangeTrainersNeeded","addLevel","setAddLevel","addVideoToExisting","setAddVideoToExisting","editModule","setEditModule","levelAdded","moduleVideos","setModuleVideos","deleteMod","delete","handleAction","getModuleInfoFromFirebase","queryLevelNames","queryModObject","levelObj","unshift","handleModuleComplete","App","isLoggedIn","exact","path","EditScreen","ReactDOM","StrictMode","document","getElementById","button","primary","css"],"mappings":"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","file":"static/js/main.6928184e.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyAl0OlBwh8zq9r7uZvO2yX4o_b5emaoSNI',\n    authDomain: 'drills-and-skills.firebaseapp.com',\n    databaseURL: 'https://drills-and-skills.firebaseio.com',\n    projectId: 'drills-and-skills',\n    storageBucket: 'drills-and-skills.appspot.com',\n    messagingSenderId: '895814479195',\n    appId: '1:895814479195:web:2f018ffed2d1a9d86e7e7e',\n    measurementId: 'G-7P4CJ5PEWR',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nconst storage = firebase.storage();\n\nexport {storage, firebase};\n","import React, {useState} from 'react';\nimport Button from '../components/Button';\nimport {firebase} from '../services/firebase';\nimport TrainerSelect from '../components/TrainerSelect';\nimport {useHistory} from 'react-router-dom';\n\nfunction JumpshotTutorScreen() {\n    const [trainers, setTrainers] = useState([]);\n    let db = firebase.firestore();\n    let allTrainers = [];\n    const [isLoading, setIsLoading] = useState(true);\n    const queryResult = queryTrainers(); //causes function to run and get trainers in the background\n    const history = useHistory();\n\n\n    function queryTrainers() {\n        var db = firebase.firestore();\n        db.collection('trainers')\n            .where('_userType', '==', 'trainers') //can either be removed or changed\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let trainerObj = {};\n                    trainerObj.value = doc.id;\n                    trainerObj.label =\n                        doc.data()._name.firstName +\n                        ' ' +\n                        doc.data()._name.lastName;\n                    trainerObj.profilePic = doc.data()._profilePic\n                    allTrainers.push(trainerObj);\n                    setIsLoading(false);\n                });\n                return allTrainers;\n            });\n    }\n    function handleClick(e) {\n        e.preventDefault();\n        module.trainers = trainers;\n        const jumpshotTutorObject = {\n            name: 'Jumpshot Tutor',\n            trainers: trainers,\n        }\n        if (module.trainers.length > 0) {\n            db.collection('modules')\n            .doc('xM2GnZdazKCLjtUuMwo4')\n            .set({module: jumpshotTutorObject})\n            .then(() => console.log('Doc written successfully!'));\n            history.push('/success');\n        } else {\n            alert('Please select at least one trainer')\n        }\n    }\n\n    return (\n        <header className=\"App-header\">\n            <h1 className=\"Jumpshot-tutor\">Select Jumpshot Tutor Trainers</h1>\n            <h2>(When players send in videos for their jumpshot, a trainer will be randomly selected from this list to be sent the video)</h2>\n                <TrainerSelect\n                    trainers={trainers}\n                    setTrainers={setTrainers}\n                    allTrainers={allTrainers}\n                    isLoading={isLoading}\n                />\n                <Button onClick={handleClick}>\n                    Finish\n                </Button>\n        </header>\n    );\n}\n\nexport default JumpshotTutorScreen;\n","import React from 'react';\nimport Select from 'react-select';\n\nfunction TrainerSelect(props) {\n    const options = props.allTrainers;\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '1px dotted pink',\n            color: state.isSelected ? 'red' : 'blue',\n            padding: 10,\n        }),\n        control: () => ({\n            // none of react-select's styles are passed to <Control />\n            width: 200,\n        }),\n        singleValue: (provided, state) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 300ms';\n\n            return {...provided, opacity, transition};\n        },\n    };\n    return (\n        <div>\n            {props.isLoading ? (\n                <p>Loading...</p>\n            ) : (\n                <Select\n                    isMulti\n                    name=\"colors\"\n                    options={options}\n                    value={props.trainers}\n                    onChange={props.setTrainers}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    styles={customStyles}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default TrainerSelect;\n","import firebase from 'firebase';\nimport 'firebase/firestore';\n\nasync function signInUser(email, password) {\n    const userInfo = firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .catch((error) => {\n            if (error.code === 'auth/wrong-password') {\n                return 'Incorrect password. Please try again';\n            } else if (error.code === 'auth/invalid-email') {\n                return 'Invalid Email';\n            } else if (error.code === 'auth/user-not-found') {\n                return 'Username not found. Please try again.';\n            } else {\n                return error;\n            }\n        });\n    if (email != 'pauleastondevteam@gmail.com') {\n        alert('You are not authorized');\n        return;\n    }\n    return userInfo;\n}\n\nfunction userIsSignedIn() {\n    let user = firebase.auth().currentUser;\n    if (user) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport {signInUser, userIsSignedIn};\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n    padding: 0.5em;\n    margin: 0.5em;\n    color: ${(props) => props.inputColor || 'orange'};\n    background: gray;\n    border: none;\n    border-radius: 3px;\n    width: ${(props) => props.width};\n    height: ${(props) => props.height};\n`;\nexport default Input;\n","import '../Login.css';\nimport React, {useState} from 'react';\nimport {signInUser, userIsSignedIn} from '../services/db-call';\nimport {useHistory} from 'react-router-dom';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\n\nfunction LoginScreen() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const history = useHistory();\n    const [userInvalidMessage, setUserInvalidMessage] = useState('');\n\n    async function handleClick(e) {\n        let signInError = signInUser(email, password);\n        signInError.then((err) => {\n            if (typeof err === 'string') {\n                console.log(err);\n                setEmail('');\n                setPassword('');\n                setUserInvalidMessage(true);\n            } else {\n                let isLoggedIn = userIsSignedIn();\n                if (isLoggedIn && email == 'pauleastondevteam@gmail.com') {\n                    console.log('isLogged in is True');\n                    history.push('/home');\n                }\n            }\n        });\n    }\n\n    return (\n        <div className=\"Login\">\n            <h1>Paul Easton 🏀 Admin</h1>\n            <h2>Sign In</h2>\n            <div>\n                <Input\n                    onChange={(text) => setEmail(text.target.value)}\n                    value={email}\n                    placeholder=\"email\"\n                    required\n                />\n                <br></br>\n                <Input\n                    type=\"password\"\n                    onChange={(text) => setPassword(text.target.value)}\n                    value={password}\n                    placeholder=\"password\"\n                    required\n                />\n                <br></br>\n                <Button onClick={(e) => handleClick(e)}>Submit</Button>\n            </div>\n            {userInvalidMessage ? (\n                <p>Incorrect Login. Please try again.</p>\n            ) : (\n                ''\n            )}\n        </div>\n    );\n}\n\nexport default LoginScreen;\n","import React, {useEffect} from 'react';\nimport 'firebase/app';\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n//This function retrieves links in storage where each video object is stored\nexport default function TrainerList() {\n    const [trainers] = React.useState([]);\n\n    useEffect(() => {\n        let i = 0;\n        var db = firebase.firestore();\n        db.collection('trainers')\n            .where('_userType', '==', 'trainers')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((trainer) => {\n                    trainers[i] =\n                        i +\n                        1 +\n                        ': ' +\n                        trainer.data()._name.firstName +\n                        ' ' +\n                        trainer.data()._name.lastName;\n                    i++;\n                });\n                //setLoading(false);\n            });\n    });\n    return (\n        <div>\n            {trainers.map((trainer) => (\n                <div key={trainer}>Trainer {trainer} </div>\n            ))}\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport 'firebase/auth';\nimport {firebase} from '../services/firebase';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\n\n//Eventually the form should include a drop down to edit what's in storage and ask which training program the video is for or whether it's a new one.\n\nfunction TestWrite() {\n    const [enteredData, setEnteredData] = useState('');\n    const db = firebase.firestore();\n    function handleSubmit(e) {\n        e.preventDefault();\n        db.collection('test').doc('test1').set({\n            name: {enteredData},\n        });\n        setEnteredData('');\n    }\n    function handleDataChange(e) {\n        setEnteredData(e.target.value);\n    }\n    return (\n        <div className=\"\">\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <Input\n                    type=\"text\"\n                    placeholder=\"Field Data\"\n                    value={enteredData}\n                    onChange={(e) => {\n                        handleDataChange(e);\n                    }}\n                />\n                <div></div>\n                <Button>Add Data</Button>\n            </form>\n            {/* <p>{error}</p> */}\n            {/* {uploadInProgress ? <p>Uploading...</p> : ''}\n            {uploadComplete ? <p>Upload Complete</p> : ''} */}\n        </div>\n    );\n}\n\nexport default TestWrite;\n","import React from 'react';\nimport TrainerList from '../components/TrainerList';\nimport TestWrite from './TestWrite';\n\nfunction TrainerScreen() {\n    return (\n        <header className=\"App-header\">\n            <h1>Drills and Skills Admin Website</h1>\n            <h2>Current Trainers:</h2>\n            <TrainerList></TrainerList>\n            <h2>Write to database: </h2>\n            <TestWrite></TestWrite>\n        </header>\n    );\n}\n\nexport default TrainerScreen;\n","import React, {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport Button from '../components/Button';\nimport {firebase} from '../services/firebase';\n\nfunction HomeScreen() {\n    const history = useHistory();\n    const [nextPage, setNextPage] = useState('');\n\n    useEffect(() => {\n        if (nextPage === 'videos') {\n            history.push('/videos');\n        } else if (nextPage === 'trainers') {\n            history.push('/trainers');\n        } else if (nextPage === 'modules') {\n            history.push('/modules');\n        } else if (nextPage === 'jumpshot-tutor') {\n            history.push('/jumpshot-tutor');\n        } else if (nextPage === 'livestream') {\n            history.push('/livestream');\n        } else if (nextPage === 'challenge') {\n            history.push('/challenge');\n        } else if (nextPage === 'edit') {\n            history.push('/edit');\n        } else if (nextPage === 'order') {\n            history.push('/order');\n        } else if (nextPage === 'tutorials') {\n            history.push('/tutorials');\n        } else if (nextPage === 'login') {\n            firebase\n                .auth()\n                .signOut()\n                .then(function () {\n                    history.push('/');\n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n        } else {\n            return;\n        }\n    });\n\n    return (\n        <header className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <Button onClick={() => setNextPage('modules')}>Create Module</Button>\n            <Button onClick={() => setNextPage('edit')}>Edit Module</Button>\n            {/* <Button onClick={() => setNextPage('order')}>Edit Order that Modules are Displayed</Button> */}\n            <Button onClick={() => setNextPage('jumpshot-tutor')}>Add/Remove Trainers from Jumpshot Tutor</Button>\n            <Button onClick={() => setNextPage('challenge')}>Create A Challenge</Button>\n            <Button onClick={() => setNextPage('livestream')}>Livestream</Button>\n            <Button onClick={() => setNextPage('tutorials')}>Tutorials</Button>\n            <Button onClick={() => setNextPage('login')}>Log out</Button>\n        </header>\n    );\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport Select from 'react-select';\n\nfunction ModNameSelect(props) {\n    const options = props.allModules;\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '1px dotted black',\n            color: state.isSelected ? 'red' : 'blue',\n        }),\n        control: () => ({\n            // none of react-select's styles are passed to <Control />\n            width: 200,\n        }),\n        singleValue: (provided, state) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 300ms';\n\n            return {...provided, opacity, transition};\n        },\n    };\n\n    return (\n        <div>\n            {props.isLoading ? (\n                <p>Loading</p>\n            ) : (\n                <Select\n                    align=\"center\"\n                    name=\"colors\"\n                    options={options}\n                    label=\"Single select\"\n                    value={props.module}\n                    onChange={props.setModule}\n                    styles={customStyles}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default ModNameSelect;\n","import React, {useState, useEffect} from 'react';\nimport ModNameSelect from '../components/ModNameSelect';\nimport Button from '../components/Button';\nimport {firebase} from '../services/firebase';\nimport {useHistory} from 'react-router-dom';\nimport Select from 'react-select';\n\n\nfunction OrderScreen() {\n    let db = firebase.firestore();\n    const history = useHistory();\n    const queryPlayerModNameResult = queryPlayerModNames();\n    const queryCoachModNameResult = queryCoachModNames();\n    const [module, setModule] = useState('');\n    const [actionChosen, setActionChosen] = useState('');\n    const [modNamesIsLoading, setModNamesIsLoading] = useState(true);\n    const [moduleFor, setModuleFor] = useState('');\n    const [orderingPlayers, setOrderingPlayers] = useState(false);\n    const [orderingCoaches, setOrderingCoaches] = useState(false);\n    var counter = 1;\n    let allPlayerModules = [];\n    let allCoachModules = [];\n\n    function queryPlayerModNames() {\n        db.collection('modules')\n            .where('module.userType', '==', 'players')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let modNameObj = {};\n                    modNameObj.value = doc.id;\n                    modNameObj.label = doc.data().module.name;\n                    if (modNameObj.label !== 'Jumpshot Tutor') {\n                        allPlayerModules.push(modNameObj);\n                    }\n                    setModNamesIsLoading(false);\n                });\n                // console.log(allPlayerModules);\n                return allPlayerModules;\n            });\n    }\n\n    function queryCoachModNames() {\n        db.collection('modules')\n            .where('module.userType', '==', 'coaches')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let modNameObj = {};\n                    modNameObj.value = doc.id;\n                    modNameObj.label = doc.data().module.name;\n                    if (modNameObj.label !== 'Jumpshot Tutor') {\n                        allCoachModules.push(modNameObj);\n                    }\n                    setModNamesIsLoading(false);\n                });\n                // console.log(allCoachModules);\n                return allCoachModules;\n            });\n    }\n\n    function choosePlayerModule() {\n        console.log(module);\n        console.log(allPlayerModules);\n    }\n\n    function chooseUserType(value) {\n        setModuleFor(value);\n        if (value === 'players') {\n            setOrderingPlayers(true);\n        } else if (value === 'coaches') {\n            setOrderingCoaches(true);\n        }\n    }\n\n\n    return (\n        <header className=\"App-header\">\n          \n                <div>\n                    <h2>Do you want to set the module order for player modules or coaches modules?</h2>\n                    <Select \n                        options={[{value: 'players', label: 'Players'}, {value: 'coaches', label: 'Coaches'}]}\n                        styles={customStyles}\n                        value={moduleFor}\n                        onChange={e => {\n                            chooseUserType(e.target)\n                        }}\n                    />\n                    <Button onClick={chooseUserType()}>Next</Button>\n                </div>\n                <div>\n                    <h2>Which module do you want to be ordered as #{counter.toString()}</h2>\n                    {/* <ModNameSelect\n                        module={module}\n                        setModule={setModule}\n                        allModules={allPlayerModules}\n                        isLoading={modNamesIsLoading}\n                    /> */}\n                    <Button onClick={choosePlayerModule()}>Next</Button>\n                </div>\n            \n        </header>\n    );\n}\n\nconst customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        borderBottom: '1px dotted pink',\n        color: state.isSelected ? 'red' : 'blue',\n        padding: 10,\n    }),\n    control: () => ({\n        // none of react-select's styles are passed to <Control />\n        width: 200,\n    }),\n    singleValue: (provided, state) => {\n        const opacity = state.isDisabled ? 0.5 : 1;\n        const transition = 'opacity 300ms';\n\n        return {...provided, opacity, transition};\n    }\n}\n\nexport default OrderScreen;\n\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {userIsSignedIn} from '../services/db-call';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                userIsSignedIn() ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to=\"/\" />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {userIsSignedIn} from '../services/db-call';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                userIsSignedIn() && restricted ? (\n                    <Redirect to=\"/home\" />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\n\nexport default PublicRoute;\n","import '../Login.css';\nimport DateTimePicker from 'react-datetime-picker';\nimport React, {useState} from 'react';\nimport {firebase} from '../services/firebase';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport {useHistory} from 'react-router-dom';\n\nfunction LivestreamScreen() {\n    const [date, setDate] = useState('');\n    const [link, setLink] = useState('');\n    const [name, setName] = useState('');\n    const [isUploaded, setIsUploaded] = useState(false);\n    const history = useHistory();\n\n    let db = firebase.firestore();\n\n    function clearData() {\n        setDate('');\n        setName('');\n        setLink('');\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        db.collection('livestream')\n            .doc('livestream')\n            .set({\n                date: date,\n                name: name,\n                link: link,\n            })\n            .then(() => {\n                console.log('Doc written successfully!');\n                clearData();\n                setIsUploaded(true);\n            });\n        history.push('/success');\n\n    }\n    return (\n        <div className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <h2>Create a New Livestream: </h2>\n            <div></div>\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p>Session Name: </p>\n                    <Input\n                        onChange={(name) => setName(name.target.value)}\n                        value={name}\n                        placeholder=\"Live Session Name\"></Input>\n                    <p>Link: </p>\n\n                    <Input\n                        onChange={(link) => setLink(link.target.value)}\n                        value={link}\n                        placeholder=\"Live Session Link\"></Input>\n\n                    <br></br>\n                    <p>Date & Time: </p>\n                    <DateTimePicker\n                        onChange={(date) => setDate(date)}\n                        value={date}\n                    />\n                    <br></br>\n                    <br></br>\n                    <Button>Submit</Button>\n                </form>\n                {isUploaded ? <p>Upload successful</p> : ''}\n            </div>\n        </div>\n    );\n}\n\nexport default LivestreamScreen;\n","import React, {useState} from 'react';\nimport {firebase} from '../services/firebase';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport TrainerSelect from '../components/TrainerSelect';\nimport {useHistory} from 'react-router-dom';\nimport Select from 'react-select';\nimport {Video} from 'video-metadata-thumbnails';\n\nvar AWS = require('aws-sdk');\nvar sh = require('shorthash');\nvar s3;\n\nvar accessKeyId;\nvar secretAccessKey;\nconst bucketName = 'training-modules';\n\nvar getKeys = firebase.functions().httpsCallable('getSecretKeyAdminApp');\ngetKeys().then((result) => {\n    if (result.data != null) {\n        // Read result of the Cloud Function.\n        accessKeyId = result.data.accessKeyId;\n        secretAccessKey = result.data.secretAccessKey;\n    }\n});\n\nfunction ModuleScreen() {\n    //THIS IS WHERE YOU CHANGE THE MODULE OBJECT\n\n    const [modName, setModName] = useState('');\n    const [moduleFor, setModuleFor] = useState();\n    let db = firebase.firestore();\n    const history = useHistory();\n    const [modNameIsSubmitted, setModNameIsSubmitted] = useState(false);\n    const [videoNum, setVideoNum] = useState(1);\n    const [videoName, setVideoName] = useState('');\n    const [duration, setDuration] = useState();\n    const [inputKey, setInputKey] = useState();\n    const [videoLink, setVideoLink] = useState('');\n    const [levelTitle, setLevelTitle] = useState();\n    const [description, setDescription] = useState('');\n    const [guidelines, setGuidelines] = useState('');\n    const [trainers, setTrainers] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [videoUploadInProgress, setVideoUploadInProgress] = useState(false);\n    const queryResult = queryTrainers(); //causes function to run and get trainers in the background\n    let allTrainers = [];\n    let [module] = useState({});\n\n    /**\n     * Query all of the trainers in the 'trainers' collection\n     * Creates a trainer object (trainerObj) for each trainer and assigns it a value and label\n     * Value is their user/doc id, label is their name (what shows up in dropdown), and profile\n     * pic is their profile picture\n     * Pushes each trainer object to the allTrainers array\n     * Returns allTrainers array\n     *\n     */\n    function queryTrainers() {\n        var db = firebase.firestore();\n        db.collection('trainers')\n            .where('_userType', '==', 'trainers') //can either be removed or changed\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let trainerObj = {};\n                    trainerObj.value = doc.id;\n                    trainerObj.label =\n                        doc.data()._name.firstName +\n                        ' ' +\n                        doc.data()._name.lastName;\n                    trainerObj.profilePic = doc.data()._profilePic;\n                    allTrainers.push(trainerObj);\n                    setIsLoading(false);\n                });\n                return allTrainers;\n            });\n    }\n    /**\n     * Clears the videoName and videoLink states and on form\n     */\n    function clearVideoInfo() {\n        setVideoName('');\n        setVideoLink('');\n        setDescription('');\n        setGuidelines('');\n    }\n\n    /**\n     * Takes the entered VideoName, and level number\n     * Creates a video object that is then pushed to the module array\n     * Change module to videoObjectArray\n     */\n    async function processVideoInfo() {\n        const fileName =\n            'modules/' +\n            module.name.replace(/\\s/g, '') +\n            '/' +\n            levelTitle.replace(/\\s/g, '') +\n            '/' +\n            videoName.replace(/\\s/g, '') +\n            '.mp4';\n\n        const video = new Video(videoLink);\n        const metadata = await video.getMetadata();\n\n        const videoParams = {\n            Bucket: bucketName,\n            Key: fileName,\n            Body: videoLink,\n            ContentType: 'video/mp4',\n        };\n\n        setVideoUploadInProgress(true);\n        getKeys().then(\n            (s3 = new AWS.S3({\n                accessKeyId: accessKeyId,\n                secretAccessKey: secretAccessKey,\n            })),\n            console.log(s3),\n            s3.upload(videoParams, function (err, info) {\n                if (err) {\n                    alert('Upload Unsuccessful');\n                    throw err;\n                }\n\n                const data = {\n                    level: levelTitle,\n                    drill: videoName,\n                    source: info.Location,\n                    duration: metadata.duration,\n                    description: description,\n                    guidelines: guidelines,\n                    key: sh.unique(videoNum.toString()),\n                };\n                if (module.videos.length === 0) {\n                    module.videos.push({data: [data], title: levelTitle});\n                } else if (\n                    module.videos[module.videos.length - 1].length === 0\n                ) {\n                    module.videos[module.videos.length - 1].data.push([data]);\n                    module.videos[module.videos.length - 1].title = levelTitle;\n                } else {\n                    module.videos[module.videos.length - 1].data.push(data);\n                    module.videos[module.videos.length - 1].title = levelTitle;\n                }\n                console.log(module);\n                setVideoUploadInProgress(false);\n                alert('Video Upload Successful!');\n            }),\n        );\n    }\n\n    /**\n     * Runs once modName and trainers have been submitted (\"initial click\")\n     * set mod object's name and trainer attributes and then set modNameIsSubmitted to true\n     */\n    function handleInitialClick(e) {\n        e.preventDefault();\n        if (modName !== '' && moduleFor) {\n            module.name = modName;\n            module.userType = moduleFor.value;\n            module.trainers = trainers;\n            module.videos = [];\n            setModNameIsSubmitted(true);\n        } else {\n            alert(\n                'Please enter a name for the module and select whether the module is for players or coaches',\n            );\n        }\n\n        console.log(module);\n    }\n\n    /**\n     * Handles the changing of files selected from the local device\n     *\n     * @param {*} e The event which was clicked\n     */\n    function handleVideoChange(e) {\n        console.log(e.target.files);\n        if (e.target.files[0]) {\n            setVideoLink(e.target.files[0]);\n            console.log(videoLink);\n            console.log(videoName.replace(/\\s/g, '') + '.mp4');\n        }\n    }\n\n    /**\n     * Only runs if the user is adding a new level to the module\n     * sets a videoObject with the entered info using ProcessVideoInfo()\n     * increments rendered level number\n     * sets the rendered video number back to 1 because it is the first video in a new level\n     * clears current video in form\n     */\n    function handleAddLevelClick(e) {\n        // eslint-disable-next-line no-restricted-globals\n        // if (\n        //     confirm(\n        //         'Make sure you have uploaded your last video. If all the fields are blank and you are done with the current level, press OK. If you have not finished uploading the current video, press Cancel and then press Upload Video',\n        //     )\n        // )\n        {\n            e.preventDefault();\n            module.videos.push({data: []});\n            setVideoNum(1); //always restart a new level at video 1\n            setLevelTitle('');\n            clearVideoInfo();\n            console.log(module);\n        }\n    }\n    /**\n     * Only runs when user clicks to add additional video to a level\n     * sets a videoObject with the entered info using ProcessVideoInfo()\n     * increments rendered level number\n     * clears current video info in form\n     */\n    function handleAddAdditionalVideo(e) {\n        e.preventDefault();\n        processVideoInfo();\n        setVideoNum(videoNum + 1);\n        clearVideoInfo();\n    }\n    /**\n     * Runs when user clicks that module is complete\n     * sets a videoObject with the entered info using ProcessVideoInfo()\n     * Actually sets a module document in the database with the videos array, modName, and mod Trainers\n     * clears the form and state\n     */\n    function handleModuleComplete(e) {\n        //sets module in database\n        e.preventDefault();\n        db.collection('modules')\n            .doc()\n            .set({module: module})\n            .then(() => console.log('Doc written successfully!'));\n        clearVideoInfo();\n        console.log(accessKeyId);\n        history.push('/success');\n    }\n\n    return (\n        <header className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <h2>Create New Training Module:</h2>\n            {/* This input and dropdown render until they have been submitted */}\n            {!modNameIsSubmitted ? (\n                <div>\n                    <h3>Module Name:</h3>\n\n                    <Input\n                        onChange={(modName) => setModName(modName.target.value)}\n                        value={modName}\n                        placeholder=\"Module name\"\n                    />\n                    <br></br>\n                    <p>Trainers: </p>\n                    <TrainerSelect\n                        trainers={trainers}\n                        setTrainers={setTrainers}\n                        allTrainers={allTrainers}\n                        isLoading={isLoading}\n                    />\n\n                    <p>Module for:</p>\n                    <Select\n                        options={[\n                            {value: 'players', label: 'Players'},\n                            {value: 'coaches', label: 'Coaches'},\n                        ]}\n                        styles={customStyles}\n                        value={moduleFor}\n                        onChange={setModuleFor}\n                    />\n                    <Button onClick={handleInitialClick}>Submit</Button>\n                </div>\n            ) : (\n                //***add video upload here!!***\n                /**\n                 * This div renders once the mod name and trainers have been submitted and\n                 * is used to update the module object with new vides\n                 */\n                <div>\n                    <div>\n                        <h3>Name of Level: </h3>\n                        <Input\n                            onChange={(text) =>\n                                setLevelTitle(text.target.value)\n                            }\n                            value={levelTitle}\n                            placeholder=\"Name The Level\"\n                        />\n                    </div>\n\n                    <br />\n                    <p>Video {videoNum}</p>\n                    <p>Video Name:</p>\n                    <Input\n                        onChange={(name) => setVideoName(name.target.value)}\n                        value={videoName}\n                        placeholder=\"Video Name\"\n                    />\n                    <p>Video File:</p>\n                    <Input\n                        key={inputKey}\n                        onChange={(e) => handleVideoChange(e)}\n                        accept=\"video/mp4\"\n                        type=\"file\"\n                        name=\"file\"\n                        placeholder=\"file\"\n                        width=\"400px\"\n                    />\n                    <p>Description:</p>\n                    <Input\n                        onChange={(name) => setDescription(name.target.value)}\n                        value={description}\n                        placeholder=\"Description\"\n                        width=\"500px\"\n                    />\n                    <p>Guidelines:</p>\n                    <Input\n                        onChange={(link) => setGuidelines(link.target.value)}\n                        value={guidelines}\n                        placeholder=\"Guidelines\"\n                        width=\"500px\"\n                    />\n                    <br />\n                    <br />\n                    {/* These buttons render once the intial submit (mod name & trainers) has been submitted */}\n                    <Button\n                        onClick={handleAddAdditionalVideo}\n                        disabled={videoUploadInProgress ? 'disabled' : ''}>\n                        {videoUploadInProgress\n                            ? 'Video Uploading...'\n                            : 'Upload Video'}\n                    </Button>\n                    <Button\n                        onClick={handleAddLevelClick}\n                        disabled={videoUploadInProgress ? 'disabled' : ''}>\n                        Add a new level\n                    </Button>\n                    <Button\n                        onClick={handleModuleComplete}\n                        disabled={videoUploadInProgress ? 'disabled' : ''}>\n                        Complete module\n                    </Button>\n                </div>\n            )}\n        </header>\n    );\n}\nexport default ModuleScreen;\n\nconst customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        borderBottom: '1px dotted pink',\n        color: state.isSelected ? 'red' : 'blue',\n        padding: 10,\n    }),\n    control: () => ({\n        // none of react-select's styles are passed to <Control />\n        width: 200,\n    }),\n    singleValue: (provided, state) => {\n        const opacity = state.isDisabled ? 0.5 : 1;\n        const transition = 'opacity 300ms';\n\n        return {...provided, opacity, transition};\n    },\n};\n","import React, {useEffect, useState} from 'react';\nimport Button from '../components/Button';\nimport DateTimePicker from 'react-datetime-picker';\nimport {useHistory} from 'react-router-dom';\nimport Input from '../components/Input';\nimport {firebase} from '../services/firebase';\n\nfunction ChallengeScreen() {\n    const [date, setDate] = useState('');\n    const [challenge, setChallenge] = useState('');\n    const [isUploaded, setIsUploaded] = useState(false);\n    const history = useHistory();\n    let db = firebase.firestore();\n\n    function clearData() {\n        setDate('');\n        setChallenge('');\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        db.collection('challenge')\n            .doc('challenge')\n            .set({\n                date: date,\n                challenge: challenge,\n            })\n            .then(() => {\n                console.log('Doc written successfully!');\n                clearData();\n                setIsUploaded(true);\n            });\n        history.push('/success');\n    }\n    return (\n        <div className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <h2>Create a New Challenge: </h2>\n            <div></div>\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p>Challenge: </p>\n                    <Input\n                        onChange={(name) => setChallenge(name.target.value)}\n                        value={challenge}\n                        placeholder=\"Live Session Name\"></Input>\n\n                    <br></br>\n                    <p>End Date:</p>\n                    <DateTimePicker\n                        onChange={(date) => setDate(date)}\n                        value={date}\n                    />\n                    <br></br>\n                    <br></br>\n                    <Button>Submit</Button>\n                </form>\n                {isUploaded ? <p>Upload successful</p> : ''}\n            </div>\n        </div>\n    );\n}\n\nexport default ChallengeScreen;\n","import React from 'react';\n\nfunction TutorialsScreen() {\n    return (\n        <header className=\"App-header\">\n            <h1>Admin App Tutorials</h1>\n            <a href={'https://drive.google.com/file/d/1Fii5yR_0XP5Cr0fnASVsdFrNpJ1g7Xcx/view?usp=sharing'}>Creating a module</a>\n            <a href={'https://drive.google.com/file/d/1Smsqbo1O4w0MhgKPQQv2qMTYh7ARUtRQ/view?usp=sharing'}>Editing a module</a>\n            <a href={'https://drive.google.com/file/d/1EZSnFu2t4FCNAPdTLr5XF636lsUlv2DJ/view?usp=sharing'}>Adding/Removing Trainers From Jumpshot Tutor</a>\n            <a href={'https://drive.google.com/file/d/1rkwYa1PAdlV6ac38HgrX945Y1rjYrmlW/view?usp=sharing'}>Creating Challenges</a>\n            <a href={'https://drive.google.com/file/d/1R_eNGoQGwXZKijrPBzlRvmYX5VWwbDku/view?usp=sharing'}>Creating a Zoom Link</a>\n        </header>\n    );\n}\n\nexport default TutorialsScreen;\n","import React, {useEffect, useState} from 'react';\n\nimport Button from '../components/Button';\nimport {useHistory} from 'react-router-dom';\n\nfunction SuccessfulUploadScreen() {\n    const [goHome, setGoHome] = useState(false);\n    const history = useHistory();\n    useEffect(() => {\n        if (goHome) {\n            history.push('/home');\n        } else {\n            return;\n        }\n    });\n    return (\n        <header className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <p>Your change has been submitted successfully</p>\n            <Button\n                onClick={() => {\n                    setGoHome(true);\n                }}>\n                Go Home\n            </Button>\n        </header>\n    );\n}\n\nexport default SuccessfulUploadScreen;\n","import React from 'react';\nimport Select from 'react-select';\n\nfunction LevelSelect(props) {\n    const options = props.allLevels;\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '1px dotted black',\n            color: state.isSelected ? 'red' : 'blue',\n        }),\n        control: () => ({\n            // none of react-select's styles are passed to <Control />\n            width: 200,\n        }),\n        singleValue: (provided, state) => {\n            const opacity = state.isDisabled ? 0.5 : 1;\n            const transition = 'opacity 300ms';\n\n            return {...provided, opacity, transition};\n        },\n    };\n\n    return (\n        <div>\n            {props.isLoading ? (\n                <p>Loading</p>\n            ) : (<div>\n                {console.log(options)}\n                    <Select\n                        align=\"center\"\n                        name=\"colors\"\n                        options={options}\n                        label=\"Single select\"\n                        value={props.moduleLevel}\n                        onChange={props.setModuleLevel}\n                        styles={customStyles}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default LevelSelect;\n","import React, {useState} from 'react';\n\nfunction ModuleInput(props) {\n    const [value, setValue] = useState(props.value)\n    return (\n        <div>\n            <input className={props.className} name={props.name} value={value} onChange={e => setValue(e.target.value)} />\n        </div>\n    );\n}\n\nexport default ModuleInput;\n","/* eslint-disable no-restricted-globals */\nimport React, {useState} from 'react';\nimport ModuleInput from '../components/ModuleInput';\nimport {firebase} from '../services/firebase';\nimport {useHistory} from 'react-router-dom';\nimport Button from '../components/Button';\n\nfunction DisplayEntireModule(props) {\n    const [propsVids, setPropsVids] = useState(props.module.module.videos);\n    const history = useHistory();\n\n    function handleSubmit(event) {\n        let db = firebase.firestore();\n        event.preventDefault();\n        const data = new FormData(event.target);\n        var levels = [];\n        propsVids.forEach(propsVid => {\n            levels.push({\n                title: data.get(`${propsVid.title.replace(/\\s/g,'')}`),\n                data: [],\n            })\n            propsVid.data.forEach(vid => {\n                var vidObj = {\n                    key: vid.key,\n                    level: data.get(`${propsVid.title.replace(/\\s/g,'')}`),\n                    drill: data.get(`${vid.drill.replace(/\\s/g,'')}drill`),\n                    source: vid.source,\n                    description: data.get(`${vid.drill.replace(/\\s/g,'')}description`),\n                    guidelines: data.get(`${vid.drill.replace(/\\s/g,'')}guidelines`)\n                }\n                levels[levels.length-1].data.push(vidObj)\n            });\n        });\n\n        db.collection('modules')\n            .doc(props.value)\n            .update({\n                'module.videos': levels,\n            })\n            .then(() => {\n                console.log('Doc written successfully!');\n                history.push('/success');\n            });\n    }\n\n    function removeDrill(target, drill) {\n        target.preventDefault();\n        if (confirm('Please confirm you want to delete the level: ' + drill + '. If not, then press cancel.')) {\n            for (var i = 0; i < propsVids.length; i++) {\n                if (propsVids[i].title === drill) {\n                    propsVids.splice(i, 1);\n                }\n            }\n            alert('You have successfully deleted ' + drill + '. Note that the changes will not show up on this page or in the app until you press Complete Changes at the bottom of the screen.')\n        }\n    }\n\n    const videos = propsVids.map(video => {\n        const vids = video.data.map(drill => {\n            return (\n                <div id={drill.drill} key={drill.drill}>\n                        <label htmlFor={`${drill.drill.replace(/\\s/g,'')}drill`}>\n                            Drill Name:\n                        </label>\n                        <ModuleInput id=\"drill\" className=\"input\" name={`${drill.drill.replace(/\\s/g,'')}drill`} value={drill.drill} />\n                        <label htmlFor={`${drill.drill.replace(/\\s/g,'')}description`}>\n                            Description:\n                        </label>\n                        <ModuleInput id=\"description\" className=\"input\" name={`${drill.drill.replace(/\\s/g,'')}description`} value={drill.description} />\n                        <label htmlFor={`${drill.drill.replace(/\\s/g,'')}guidelines`}>\n                            Guidelines:\n                        </label>\n                        <ModuleInput id=\"guidelines\" className=\"input\" name={`${drill.drill.replace(/\\s/g,'')}guidelines`} value={drill.guidelines} />\n                        {/* <div>\n                            <Button onClick={(e) => removeDrill(e, drill.drill)}>Delete Drill</Button>\n                            <Button onClick={(e) => removeDrill(e, drill.drill)}>Add Another Drill</Button>\n                        </div> */}\n                    <br/>\n                </div>\n            );\n        });\n\n    return (\n        <div key={video.title}>\n            <div>\n                <label htmlFor={`${video.title.replace(/\\s/g,'')}`}>Level:</label>\n                <ModuleInput id=\"title\" className=\"title\" name={`${video.title.replace(/\\s/g,'')}`} value={video.title} />\n                <br/>\n            </div>\n            {vids}\n            <Button onClick={(e) => removeDrill(e, video.title)}>Delete Entire Level: {video.title}</Button>\n            <br/>\n            <br/>\n            <br/>\n        </div>\n    );\n});\n\n\n    return (\n        <div>\n            {props.isLoading ? (\n                <p>Loading...</p>\n            ) : (\n                <div>\n                    <form onSubmit={(event) => handleSubmit(event)}>\n                        {videos}\n                        <button>Complete Changes</button>\n                    </form>\n\n                </div>\n            )}\n            \n        </div>\n    )\n}\n\nexport default DisplayEntireModule;\n","/* eslint-disable no-restricted-globals */\nimport React, {useState} from 'react';\nimport {firebase} from '../services/firebase';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport TrainerSelect from '../components/TrainerSelect';\nimport ModNameSelect from '../components/ModNameSelect';\nimport LevelSelect from '../components/LevelSelect';\nimport DisplayEntireModule from '../components/DisplayEntireModule';\nimport {useHistory} from 'react-router-dom';\nimport {Video} from 'video-metadata-thumbnails';\nvar AWS = require('aws-sdk');\nvar sh = require('shorthash');\n\nvar accessKeyId;\nvar secretAccessKey;\nconst bucketName = 'training-modules';\nvar s3 = new AWS.S3({\n    accessKeyId: accessKeyId,\n    secretAccessKey: secretAccessKey,\n});\n\nvar getKeys = firebase.functions().httpsCallable('getSecretKeyAdminApp');\ngetKeys().then((result) => {\n    if (result.data != null) {\n        // Read result of the Cloud Function.\n        accessKeyId = result.data.accessKeyId;\n        secretAccessKey = result.data.secretAccessKey;\n    }\n});\n\nfunction ModuleScreen() {\n    const [modName, setModName] = useState('');\n    let db = firebase.firestore();\n    const history = useHistory();\n    const [videoNum, setVideoNum] = useState(1);\n    const [videoName, setVideoName] = useState('');\n    const [videoLink, setVideoLink] = useState('');\n    const [levelTitle, setLevelTitle] = useState('');\n    const [module, setModule] = useState('');\n    const [isModuleLoading, setIsModuleLoading] = useState(true);\n    const [editModuleObj, setEditModuleObj] = useState({});\n    const [trainers, setTrainers] = useState();\n    const [inputKey, setInputKey] = useState();\n    const [description, setDescription] = useState('');\n    const [guidelines, setGuidelines] = useState('');\n    const [trainersIsLoading, setTrainersIsLoading] = useState(true);\n    const [modNamesIsLoading, setModNamesIsLoading] = useState(true);\n    const [modLevelsIsLoading, setModLevelsIsLoading] = useState(true);\n    let [videos] = useState([]);\n    const queryTrainerResult = queryTrainers();\n    //causes trainers query to run at beginning so it is there if user needs to edit it\n    const queryModNameResult = queryModNames();\n    //causes modNames (all mods in database) to run at beginning so it is there if user needs to edit it\n    const [moduleLevel, setModuleLevel] = useState('');\n    const [actionChosen, setActionChosen] = useState('');\n    const [changeName, setChangeName] = useState(false);\n    const [changeTrainersNeeded, setChangeTrainersNeeded] = useState(false);\n    const [addLevel, setAddLevel] = useState(false);\n    const [addVideoToExisting, setAddVideoToExisting] = useState(false);\n    const [editModule, setEditModule] = useState(false);\n\n    const [videoUploadInProgress, setVideoUploadInProgress] = useState(false);\n    const [levelToAddTo, setLevelToAddTo] = useState();\n    let [levelAdded] = useState({});\n    const [moduleVideos, setModuleVideos] = useState([]);\n    let allTrainers = []; //array of allTrainers in db\n    let allModules = []; //array of all modNames in db\n    let allLevels = [];\n    // var levelAdded = {};\n\n    /**\n     * Updates the modName for the module object chosen by user (module variable)\n     */\n    function changeModName() {\n        //console.log('Modname' + modName);\n        db.collection('modules')\n            .doc(module.value)\n            .update({\n                'module.name': modName,\n            })\n            .then(function () {\n                console.log('modName updated successfully');\n                history.push('/success');\n            });\n    }\n\n    /**\n     * Updates the trainers for the module object chosen by user (module variable)\n     */\n    function changeTrainers() {\n        if (trainers) {\n            db.collection('modules')\n                .doc(module.value)\n                .update({'module.trainers': trainers})\n                .then(function () {\n                    console.log('trainers changed successfully');\n                    history.push('/success');\n                });\n        } else {\n            alert('Please select at least one trainer');\n        }\n    }\n    /**\n     * Deletes the module chosen from the database (module object)\n     * Might want to keep Paul from doing this\n     */\n    function deleteMod() {\n        // eslint-disable-next-line no-restricted-globals\n        if (\n            confirm(\n                'Are you sure you want to delete this module? This cannot be undone.',\n            )\n        ) {\n            db.collection('modules')\n                .doc(module.value)\n                .delete()\n                .then(function () {\n                    history.push('/success');\n                    console.log('doc deleted successfully');\n                    return true;\n                });\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Runs when any edit button is selected\n     * 'a' param specifies which action is to be run\n     * The actual action required is called (either rendering the form for a change or completing the change (delete))\n     */\n    async function handleAction(a) {\n        if (module === '') {\n            alert('Please select a module first.');\n            return;\n        }\n        if (a === 'deleteMod') {\n            let deleted = deleteMod(); //automatically deletes the mod on click\n            if (!deleted) {\n                return;\n            }\n        }\n        if (a === 'changeModName') {\n            setChangeName(true); //sets changeName to true so that the name change form renders\n        }\n        if (a === 'changeTrainers') {\n            setChangeTrainersNeeded(true); //sets changeTrainersNeeded to true so that the change trainers form renders\n        }\n        if (a === 'addLevel') {\n            await getModuleInfoFromFirebase(); //waits for query of all videos in selected module\n            setAddLevel(true); //renders add level form\n        }\n        if (a === 'addVideoToExisting') {\n            // await getModuleInfoFromFirebase(); //waits for query of all videos in selected module\n            await queryLevelNames();\n        }\n        if (a === 'editModule') {\n            queryModObject(module);\n        }\n        setActionChosen(a);\n    }\n    /**\n     * Same queryTrainers function as in ModuleScreen (can be moved but still need to update state in this file?)\n     * Querys all trainers in database in case user wants to edit them\n     */\n    function queryTrainers() {\n        db.collection('trainers')\n            .where('_userType', '==', 'trainers')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let trainerObj = {};\n                    trainerObj.value = doc.id;\n                    trainerObj.label =\n                        doc.data()._name.firstName +\n                        ' ' +\n                        doc.data()._name.lastName;\n                    trainerObj.profilePic = doc.data()._profilePic;\n                    allTrainers.push(trainerObj);\n                    setTrainersIsLoading(false);\n                });\n                return allTrainers;\n            });\n    }\n    /**\n     * Queries all of the mods in the database\n     * creates a ModNameObj that contains a value (user facing mod Name) and label (mod doc id) for the dropdown\n     */\n    function queryModNames() {\n        db.collection('modules')\n            .get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    let modNameObj = {};\n                    modNameObj.value = doc.id;\n                    modNameObj.label = doc.data().module.name;\n                    if (modNameObj.label !== 'Jumpshot Tutor') {\n                        allModules.push(modNameObj);\n                    }\n                    setModNamesIsLoading(false);\n                });\n                return allModules;\n            });\n    }\n\n    async function queryLevelNames() {\n        await db\n            .collection('modules')\n            .doc(module.value)\n            .get()\n            .then((doc) => {\n                doc.data().module.videos.forEach((level) => {\n                    let levelObj = {};\n                    levelObj.value = level.title;\n                    levelObj.label = level.title;\n                    allLevels.push(levelObj);\n                });\n            })\n            .then(() => {\n                setModLevelsIsLoading(false);\n                setAddVideoToExisting(true);\n            });\n\n        console.log(allLevels);\n        return allLevels;\n    }\n\n    async function queryModObject(modName) {\n        await db\n            .collection('modules')\n            .where('module.name', '==', modName.label)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    setEditModuleObj(doc.data());\n                });\n            })\n            .then(() => {\n                setIsModuleLoading(false);\n                setEditModule(true);\n            });\n    }\n    /**\n     * Same function as in ModuleScreen (can be moved but needs to update state in this)\n     * clears videoName and videoLink state and form for user\n     */\n    function clearVideoInfo() {\n        setVideoName('');\n        setVideoLink('');\n        setDescription('');\n        setGuidelines('');\n    }\n\n    /**\n     * Similar function as in ModuleScreen (can be moved but still needs to update state)\n     * Creates a video object and pushes it to the moduleVideos array\n     * Handle however you want to define key here\n     */\n    async function processVideoInfo() {\n        console.log(moduleVideos);\n        console.log(levelTitle);\n        console.log(videoName);\n        const fileName =\n            'modules/' +\n            moduleVideos.module.name.replace(/\\s/g, '') +\n            '/' +\n            levelTitle.replace(/\\s/g, '') +\n            '/' +\n            videoName.replace(/\\s/g, '') +\n            '.mp4';\n\n        const video = new Video(videoLink);\n        const metadata = await video.getMetadata();\n\n        const videoParams = {\n            Bucket: bucketName,\n            Key: fileName,\n            Body: videoLink,\n            ContentType: 'video/mp4',\n        };\n\n        setVideoUploadInProgress(true);\n\n        var getKeys = await firebase.functions().httpsCallable('getSecretKeyAdminApp');\n        await getKeys().then((result) => {\n            if (result.data != null) {\n                // Read result of the Cloud Function.\n                s3 = new AWS.S3({\n                    accessKeyId: result.data.accessKeyId,\n                    secretAccessKey: result.data.secretAccessKey,\n                })\n            }\n        });\n        \n        s3.upload(videoParams, function (err, info) {\n            if (err) {\n                alert('Upload Unsuccessful');\n                throw err;\n            }\n\n            if (!levelAdded.title) {\n                levelAdded.title = levelTitle;\n                levelAdded.data = [];\n            }\n\n            const data = {\n                level: levelTitle,\n                drill: videoName,\n                source: info.Location,\n                duration: metadata.duration,\n                description: description,\n                guidelines: guidelines,\n                key: sh.unique(videoNum.toString()),\n            };\n\n            levelAdded.data.push(data);\n            console.log(levelAdded);\n            setVideoUploadInProgress(false);\n            alert('Video Upload Successful!');\n        });\n    }\n\n    /**\n     * Queries all module info in db for the selected module\n     * sets moduleVideos array to contain all videos already in module\n     * sets the level number displayed to the user when adding a new level as 1 + the number of the last level\n     */\n    async function getModuleInfoFromFirebase() {\n        console.log(module.value);\n        db.collection('modules')\n            .doc(module.value)\n            .get()\n            .then((doc) => {\n                setModuleVideos(doc.data());\n            });\n    }\n\n    /**\n     * creates a new video object to be inserted into the video module\n     * iterates through all vidoes in the module until it finds the END of the level\n     * that the user wants to add the video to OR it has reached the last video in the module\n     * sets the key of the of the video object equal to its position in the array + 1 (key stuff commented out)\n     * inserts the new videoObject in that position\n     * iterates through all videos after the one that was inserted to update their keys by 1\n     * updates the videos array in the database\n     */\n    function handleVideoInsertion() {\n        //HANDLE GETTING RID OF KEY\n        var videoObject = {};\n        videoObject.drill = videoName;\n        videoObject.source = videoLink;\n        videoObject.level = parseInt(levelToAddTo); //this level is indicated by the user\n        let i;\n        //let savedIndex = 0;\n        for (i = 0; i < moduleVideos.length; i++) {\n            if (\n                moduleVideos[i].level > levelToAddTo ||\n                i === moduleVideos.length - 1\n            ) {\n                //videoObject.key = i;\n                moduleVideos.splice(i - 1, 0, videoObject);\n                //savedIndex = i;\n                break;\n            }\n        }\n        // let j;\n        // for (j = savedIndex; j < moduleVideos.length; j++) {\n        //     moduleVideos[j].key += 1;\n        // }\n        db.collection('modules')\n            .doc(module.value)\n            .update({\n                'module.videos': moduleVideos,\n            })\n            .then(() => console.log('Doc written successfully!'));\n        clearVideoInfo();\n        history.push('/success');\n    }\n    /**\n     * calls handleVideoInsertion\n     */\n    async function handleAddAdditionalVideoToLevel(e) {\n        e.preventDefault();\n        console.log(editModuleObj);\n        // handleVideoInsertion();\n    }\n    /**\n     * Processes video info\n     * increments videoNum (what is rendered to user)\n     * clears video info state\n     */\n    function handleAddAdditionalVideo(e) {\n        e.preventDefault();\n        processVideoInfo();\n        setVideoNum(videoNum + 1);\n        clearVideoInfo();\n    }\n    /**\n     * Processes last video entered info\n     * Updates the module's videos and pushes\n     * Sends user to succeses page\n     */\n    async function handleModuleComplete(e) {\n        if (\n            confirm(\n                'Please make sure your last video has uploaded. If you are sure that you have completed your level, press OK. If not, press cancel and continue to upload videos.',\n            )\n        ) {\n            setModuleVideos(moduleVideos.module.videos.unshift(levelAdded));\n            e.preventDefault();\n            db.collection('modules')\n                .doc(module.value)\n                .update({\n                    'module.videos': moduleVideos.module.videos,\n                })\n                .then(() => console.log('Doc written successfully!'));\n            clearVideoInfo();\n            history.push('/success');\n        }\n    }\n\n    function handleVideoChange(e) {\n        console.log(e.target.files);\n        if (e.target.files[0]) {\n            setVideoLink(e.target.files[0]);\n            console.log(videoLink);\n            console.log(videoName.replace(/\\s/g, '') + '.mp4');\n        }\n    }\n\n    return (\n        <header className=\"App-header\">\n            <h1>Paul Easton 🏀 Admin Website</h1>\n            <h2>Edit Existing Training Module:</h2>\n            <div>\n                {!editModule ? (\n                    <div>\n                        <h3>Module Name:</h3>\n                        <ModNameSelect\n                            module={module}\n                            setModule={setModule}\n                            allModules={allModules}\n                            isLoading={modNamesIsLoading}\n                        />\n                    </div>\n                ) : (\n                    <div></div>\n                )}\n                {/* Renders when an edit action button has been clicked */}\n                {actionChosen ? (\n                    <div>\n                        {changeName ? ( //renders when user clicks name change button\n                            <div>\n                                <p>New Name: </p>\n                                <Input\n                                    onChange={(name) =>\n                                        setModName(name.target.value)\n                                    }\n                                    value={modName}\n                                    placeholder=\"Module Name\"\n                                />\n                                <Button onClick={changeModName}>Submit</Button>\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                        {changeTrainersNeeded ? ( //renders when user wants to edit trainers\n                            <div>\n                                <p>Trainers: </p>\n                                <TrainerSelect\n                                    trainers={trainers}\n                                    setTrainers={setTrainers}\n                                    allTrainers={allTrainers}\n                                    isLoading={trainersIsLoading}\n                                />\n                                <Button onClick={changeTrainers}>Submit</Button>\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                        {addLevel ? ( //renders when user wants to add a new level (to end of module only)\n                            <div>\n                                <div>\n                                    <h3>Name of Level: </h3>\n                                    <Input\n                                        onChange={(text) =>\n                                            setLevelTitle(text.target.value)\n                                        }\n                                        value={levelTitle}\n                                        placeholder=\"Name The Level\"\n                                    />\n                                </div>\n\n                                <br />\n                                <p>Video {videoNum}</p>\n                                <p>Video Name:</p>\n                                <Input\n                                    onChange={(name) =>\n                                        setVideoName(name.target.value)\n                                    }\n                                    value={videoName}\n                                    placeholder=\"Video Name\"\n                                />\n                                <p>Video File:</p>\n                                <Input\n                                    key={inputKey}\n                                    onChange={(e) => handleVideoChange(e)}\n                                    accept=\"video/mp4\"\n                                    type=\"file\"\n                                    name=\"file\"\n                                    placeholder=\"file\"\n                                    width=\"400px\"\n                                />\n                                <p>Description:</p>\n                                <Input\n                                    onChange={(name) =>\n                                        setDescription(name.target.value)\n                                    }\n                                    value={description}\n                                    placeholder=\"Description\"\n                                    width=\"500px\"\n                                />\n                                <p>Guidelines:</p>\n                                <Input\n                                    onChange={(link) =>\n                                        setGuidelines(link.target.value)\n                                    }\n                                    value={guidelines}\n                                    placeholder=\"Guidelines\"\n                                    width=\"500px\"\n                                />\n                                <br></br>\n                                <br></br>\n                                <Button\n                                    onClick={handleAddAdditionalVideo}\n                                    disabled={\n                                        videoUploadInProgress ? 'disabled' : ''\n                                    }>\n                                    {videoUploadInProgress\n                                        ? 'Video Uploading...'\n                                        : 'Upload Video'}\n                                </Button>\n                                <Button\n                                    onClick={(e) => handleModuleComplete(e)}\n                                    disabled={\n                                        videoUploadInProgress ? 'disabled' : ''\n                                    }>\n                                    Complete and Add Level to Module\n                                </Button>\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                        {editModule ? (\n                            <div>\n                                <DisplayEntireModule\n                                    module={editModuleObj}\n                                    value={module.value}\n                                    isLoading={isModuleLoading}\n                                    onClick={handleAddAdditionalVideoToLevel}\n                                />\n                            </div>\n                        ) : (\n                            ''\n                        )}\n                        {addVideoToExisting ? (\n                            <LevelSelect\n                                moduleLevel={moduleLevel}\n                                setModuleLevel={setModuleLevel}\n                                allLevels={allLevels}\n                                isLoading={modLevelsIsLoading}\n                            />\n                        ) : (\n                            ''\n                        )}\n                    </div>\n                ) : (\n                    //renders until action has been chosen\n                    <div>\n                        <br></br>\n                        <Button onClick={() => handleAction('editModule')}>\n                            Edit Module Info/Delete Levels\n                        </Button>\n                        <Button onClick={() => handleAction('addLevel')}>\n                            Add level\n                        </Button>\n                        {/* <Button\n                            onClick={() => handleAction('addVideoToExisting')}>\n                            Add video to existing level\n                        </Button> */}\n                        <Button onClick={() => handleAction('changeTrainers')}>\n                            Change assigned trainers\n                        </Button>\n                        <Button onClick={() => handleAction('changeModName')}>\n                            Change module name\n                        </Button>\n                        <Button onClick={() => handleAction('deleteMod')}>\n                            Delete module\n                        </Button>\n                    </div>\n                )}\n                <br></br>\n            </div>\n        </header>\n    );\n}\nexport default ModuleScreen;\n","import React from 'react';\nimport './App.css';\nimport 'firebase/app';\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\nimport LoginScreen from './screens/LoginScreen';\nimport TrainerScreen from './old-files/TrainerScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport JumpshotTutorScreen from './screens/JumpshotTutor'\nimport {userIsSignedIn} from './services/db-call';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport LivestreamScreen from './screens/LivestreamScreen';\nimport ModuleScreen from './screens/ModuleScreen';\nimport ChallengeScreen from './screens/ChallengeOfTheWeek';\nimport TutorialsScreen from './screens/TutorialsScreen';\nimport SuccessfulUploadScreen from './screens/SuccessUpload';\nimport EditScreen from './screens/EditScreen';\n\nfunction App() {\n    let isLoggedIn = userIsSignedIn();\n    console.log(isLoggedIn);\n\n    return (\n        <Router>\n            <div className=\"App\">\n                <Switch>\n                    <PublicRoute exact path=\"/\" component={LoginScreen} />\n                    <PrivateRoute\n                        restricted={false}\n                        exact\n                        path=\"/home\"\n                        component={HomeScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/trainers\"\n                        component={TrainerScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/success\"\n                        component={SuccessfulUploadScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/modules\"\n                        component={ModuleScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/jumpshot-tutor\"\n                        component={JumpshotTutorScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/challenge\"\n                        component={ChallengeScreen}\n                    />\n                    <PrivateRoute\n                        exact\n                        path=\"/livestream\"\n                        component={LivestreamScreen}\n                    />\n                    <PrivateRoute exact path=\"/edit\" component={EditScreen} />\n                    <PrivateRoute\n                        exact\n                        path=\"/order\"\n                        component={OrderScreen}\n                    />\n                    <PrivateRoute\n                        restricted={false}\n                        exact\n                        path=\"/tutorials\"\n                        component={TutorialsScreen}\n                    />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n// let Vimeo = require('vimeo').Vimeo;\n// let client = new Vimeo(\n//     '6b104bfa0fcb1a18ee66e28b34c1310bfc9da72b',\n//     '7stdCcKs9yolMneQQbKffwxmWecA8NnurjY3elYlE9sdZo7vrK4ypvAjtASKiV6wMsmY9DdIpFOL0KEqeF66v9XkgLayoGqpckj8zrPipL3QAFJE/0OimrHwgpFXiIF5',\n//     'aee5286d87f0a53299355319be4dd469',\n// );\n\n// client.request(\n//     {\n//         method: 'GET',\n//         path: '/tutorial',\n//     },\n//     function (error, body, status_code, headers) {\n//         if (error) {\n//             console.log(error);\n//         }\n\n//         console.log(body);\n//     },\n// );\n","import styled, {css} from 'styled-components';\n\nconst Button = styled.button`\n    background: grey;\n    border-radius: 3px;\n    border: 2px solid black;\n    color: white;\n    margin: 0.5em 1em;\n    padding: 0.25em 1em;\n    height: 40px;\n    font-size: 0.9em;\n    ${(props) => props.disabled};\n    ${(props) =>\n        props.primary &&\n        css`\n            background: palevioletred;\n            color: white;\n        `};\n`;\n\nexport default Button;\n"],"sourceRoot":""}